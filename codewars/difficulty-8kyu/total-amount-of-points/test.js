
const solution = require('./solution');


test("Total Amount of Point", () => {
    expect(solution.points(["1:0","2:0","3:0","4:0","2:1","3:1","4:1","3:2","4:2","4:3"])).toBe(30);
    expect(solution.points(["1:1","2:2","3:3","4:4","2:2","3:3","4:4","3:3","4:4","4:4"])).toBe(10);
    expect(solution.points(["0:1","0:2","0:3","0:4","1:2","1:3","1:4","2:3","2:4","3:4"])).toBe(0);
    expect(solution.points(["1:0","2:0","3:0","4:4","2:2","3:3","1:4","2:3","2:4","3:4"])).toBe(12);
    expect(solution.points(['1:0','2:0','3:0','4:0','2:1','1:3','1:4','2:3','2:4','3:4'])).toBe(15);
    expect(solution.points(['3:0','3:3','3:1','0:2','3:3','4:3','1:1','1:1','3:3','3:2'])).toBe(17);
    expect(solution.points(['2:3','4:4','1:1','1:3','2:1','0:1','0:4','2:4','4:2','1:3'])).toBe(8);
    expect(solution.points(['4:1','0:4','3:0','0:0','1:3','1:4','4:2','3:1','1:0','0:3'])).toBe(16);
    expect(solution.points(['0:0','1:0','1:1','1:4','3:0','1:2','2:2','0:3','2:1','3:1'])).toBe(15);
    expect(solution.points(['4:3','2:2','0:0','1:3','0:3','0:1','2:0','0:3','0:2','3:0'])).toBe(11);
    expect(solution.points(['4:1','4:2','0:1','4:2','3:4','2:0','2:0','3:2','2:3','4:4'])).toBe(19);
    expect(solution.points(['2:3','4:2','3:4','0:0','3:0','2:3','1:3','1:2','2:1','1:0'])).toBe(13);
    expect(solution.points(['0:3','2:3','2:4','4:1','4:2','2:0','3:3','0:1','2:3','2:1'])).toBe(13);
    expect(solution.points(['2:4','2:2','3:0','1:2','2:1','1:1','2:0','3:2','1:4','3:2'])).toBe(17);
    expect(solution.points(['3:4','1:1','4:1','2:2','2:1','4:0','1:4','4:1','4:0','1:1'])).toBe(18);
    expect(solution.points(['1:2','2:1','0:4','2:4','0:3','4:2','2:4','4:1','0:0','0:0'])).toBe(11);
    expect(solution.points(['4:2','1:1','2:1','4:1','3:1','1:2','0:4','0:1','3:0','0:0'])).toBe(17);
    expect(solution.points(['0:2','4:3','2:2','3:4','1:0','2:3','3:3','2:4','2:1','3:2'])).toBe(14);
    expect(solution.points(['1:2','0:4','2:1','4:3','4:0','0:4','2:1','1:4','0:1','0:2'])).toBe(12);
    expect(solution.points(['3:1','3:0','0:2','3:1','2:1','4:0','0:4','2:3','4:4','3:4'])).toBe(16);
    expect(solution.points(['3:0','4:0','0:0','1:3','4:3','1:3','3:0','0:4','0:0','0:0'])).toBe(15);
    expect(solution.points(['0:1','1:4','2:1','3:1','3:3','3:4','2:1','4:3','4:1','0:3'])).toBe(16);
    expect(solution.points(['0:3','2:1','4:2','3:0','1:4','1:3','0:3','4:3','1:3','4:4'])).toBe(13);
    expect(solution.points(['4:1','2:2','4:3','4:4','0:3','4:3','4:0','2:3','2:4','1:0'])).toBe(17);
    expect(solution.points(['2:2','2:1','4:2','0:0','0:0','0:1','3:2','1:2','2:4','4:2'])).toBe(15);
    expect(solution.points(['4:3','3:0','0:1','0:1','1:0','1:3','4:0','1:1','4:2','2:4'])).toBe(16);
    expect(solution.points(['1:4','4:1','2:4','2:4','2:2','3:3','0:2','0:4','0:4','4:2'])).toBe(8);
    expect(solution.points(['4:0','1:2','4:1','3:4','3:4','0:3','1:0','3:1','2:2','4:0'])).toBe(16);
    expect(solution.points(['0:2','2:2','1:2','3:1','4:1','4:1','0:4','3:2','4:3','2:3'])).toBe(16);
    expect(solution.points(['3:3','2:3','0:4','2:1','0:0','1:1','2:4','1:0','4:2','1:1'])).toBe(13);
    expect(solution.points(['0:4','4:4','3:4','2:4','0:2','1:0','2:2','0:1','0:1','4:0'])).toBe(8);
    expect(solution.points(['4:1','4:3','3:1','0:4','1:2','0:0','0:2','4:3','1:3','2:2'])).toBe(14);
    expect(solution.points(['1:4','0:2','1:4','0:3','4:2','3:0','1:0','0:3','3:0','0:4'])).toBe(12);
    expect(solution.points(['0:3','0:3','4:3','1:0','3:1','2:1','0:2','2:4','2:0','3:4'])).toBe(15);
    expect(solution.points(['3:1','2:0','0:4','0:2','2:2','0:2','0:2','4:1','2:2','3:0'])).toBe(14);
    expect(solution.points(['0:1','2:3','4:0','0:4','3:3','3:1','2:2','4:4','4:3','4:4'])).toBe(13);
    expect(solution.points(['3:0','3:1','2:4','3:0','1:0','3:1','1:0','4:2','0:2','3:1'])).toBe(24);
    expect(solution.points(['0:0','1:1','0:2','3:4','0:2','4:1','0:0','2:3','1:2','2:1'])).toBe(9);
    expect(solution.points(['1:1','0:4','2:4','0:3','0:2','1:1','3:3','4:1','1:4','3:1'])).toBe(9);
    expect(solution.points(['3:4','3:2','1:3','2:1','3:0','1:3','1:1','3:0','1:1','1:0'])).toBe(17);
    expect(solution.points(['4:3','4:2','0:4','1:3','4:0','2:3','2:2','1:2','3:2','2:0'])).toBe(16);
    expect(solution.points(['1:0','1:3','2:1','3:2','1:4','1:4','3:3','0:1','3:3','2:1'])).toBe(14);
    expect(solution.points(['1:2','0:3','2:4','4:1','1:1','3:4','3:1','4:2','1:2','2:4'])).toBe(10);
    expect(solution.points(['2:3','2:3','3:1','3:3','2:1','4:4','1:1','0:1','4:0','0:4'])).toBe(12);
    expect(solution.points(['2:3','2:0','1:2','2:2','2:1','3:1','4:2','3:4','3:4','1:3'])).toBe(13);
    expect(solution.points(['0:2','4:3','3:4','0:3','0:2','1:3','0:3','3:4','4:2','1:0'])).toBe(9);
    expect(solution.points(['4:0','3:1','4:0','4:1','3:3','1:2','1:1','2:0','2:3','1:2'])).toBe(17);
    expect(solution.points(['1:2','1:2','4:3','2:0','0:0','0:3','4:1','0:4','2:4','1:1'])).toBe(11);
    expect(solution.points(['0:0','2:3','3:4','2:3','3:1','2:1','1:4','4:0','4:3','3:3'])).toBe(14);
    expect(solution.points(['3:4','4:1','1:1','3:1','1:0','4:0','3:2','1:2','4:0','2:0'])).toBe(22);
    expect(solution.points(['3:0','1:1','1:3','2:0','3:1','2:4','1:0','3:2','0:4','3:3'])).toBe(17);
    expect(solution.points(['0:2','3:4','0:0','1:2','0:2','4:2','2:2','4:3','4:3','4:1'])).toBe(14);
    expect(solution.points(['2:2','2:3','2:0','1:4','3:3','1:1','1:1','1:0','3:1','0:3'])).toBe(13);
});
